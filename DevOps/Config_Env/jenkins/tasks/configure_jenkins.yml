---
- name: Configuring Jenkins-Slave  
  yum:
    name: '*'
    state: latest

- name: Remove the Docker package
  yum:
    name: "{{ Docker }}"
    state: absent
  vars:
    Docker:
    - docker
    - docker-client
    - docker-client-latest
    - docker-common
    - docker-latest
    - docker-latest-logrotate
    - docker-logrotate
    - docker-engine
    - java-11*  

- name: Install a list of packages with a list variable
  yum:
    name: "{{ packages }}"
  vars:
    packages:
    - git
    - java-11*
    - yum-utils
    - epel-release
    - wget
    - tree
    - mlocate

- name: Adding Docker repo
  shell: yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo

- name:
  shell: yum install docker-ce docker-ce-cli containerd.io docker-compose-plugin -y

- name: Enabling/Start Docker
  service:
    name: docker
    state: started
    enabled: yes

- name: Opening port 8080 and 8090
  raw: systemctl enable --now firewalld && firewall-cmd --add-port=8080/tcp --permanent && firewall-cmd --add-port=8090/tcp --permanent && firewall-cmd --reload
  register: result

- name: Debug result
  debug:
    var: result

- name: Installing Jenkins
  shell: wget -O /etc/yum.repos.d/jenkins.repo http://pkg.jenkins-ci.org/redhat-stable/jenkins.repo && rpm --import https://pkg.jenkins.io/redhat-stable/jenkins.io.key && dnf install jenkins -y  

- name: Enabling/Start jenkins
  service:
    name: jenkins
    state: started
    enabled: yes

<<<<<<< HEAD
- name: Create Maven  directory
  ansible.builtin.file:
    path: /home/jenkins/maven
    state: directory

- name: Download MAVEN
  ansible.builtin.get_url:
    url: https://dlcdn.apache.org/maven/maven-3/3.8.8/binaries/apache-maven-3.8.8-bin.tar.gz
    dest: /home/jenkins/maven

- name: Extract Maven file
  ansible.builtin.unarchive:
    src: /home/jenkins/maven/apache-maven-3.8.8-bin.tar.gz
    dest: /home/jenkins/maven
    remote_src: yes
=======
- name: Downloading MAVEN
  shell: mkdir /opt/maven && cd /opt/maven && wget https://dlcdn.apache.org/maven/maven-3/3.8.7/binaries/apache-maven-3.8.7-bin.tar.gz && tar -xvf apache-maven-3.8.7-bin.tar.gz
>>>>>>> 7141c9c (Updates)

- name: Adding JAVA_HOME and MAVEN to path
  blockinfile:
    path: /etc/profile
    block: |
<<<<<<< HEAD
      JAVA_HOME=/usr/lib/jvm/java-11-openjdk-11.0.18.0.9-0.3.ea.el9.x86_64/bin
      M2_HOME=/home/jenkins/maven/apache-maven-3.8.8
=======
      JAVA_HOME=/usr/lib/jvm/java-11-openjdk-11.0.18.0.9-0.3.ea.el9.aarch64/bin
      M2_HOME=/opt/maven/apache-maven-3.8.7
>>>>>>> 7141c9c (Updates)
      M2=$M2_HOME/bin
      export PATH=$PATH:$JAVA_HOME:$M2:$M2_HOME

#- name: Disable Password Authentication
#lineinfile:
#dest=/etc/ssh/sshd_config
#regexp='^PasswordAuthentication'
#line="PasswordAuthentication no"
#state=present
#backup=yes

- name: Disable Root Login
  lineinfile:
    dest=/etc/ssh/sshd_config
    regexp='^PermitRootLogin'
    line="PermitRootLogin no"
    state=present
    backup=yes

- name: Restart SSH
  service:
    name: sshd
    state: restarted      

<<<<<<< HEAD
- name: Copy a "passwd" file on the remote machine
  ansible.builtin.copy:
    src: files/.passwd
    dest: /tmp

- name: Running the Docker login script
  script: files/docker_login.sh
  register: result
    
- name: Remove passwd file
  ansible.builtin.file:
    path: /tmp/.passwd
    state: absent
=======
- name: Running the Docker login script
  script: files/docker_login.sh
  register: result
>>>>>>> 7141c9c (Updates)

- name: Debug result
  debug:
    var: result

#- name: Reboot Jenkins-Slave Server
#  shell: "sleep 10 && reboot"

#  async: 120

#- name: Wait for the machine to come back online
#  wait_for_connection:
#    delay: 60
#    timeout: 600   
